package com.curry.wk.commons;

import java.io.IOException;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;

/** 
* @author Curry
* @date Apr 11, 2017
* @version 0.1
*/
public class ClientSocket {
	
	private static final ObjectMapper mapper = new ObjectMapper();

	private int source;
	private int destination;
	private int type;
	private String data;
	
	public ClientSocket(){
		
	}
	
	public ClientSocket(int source, int destination, int type, String data) {
		super();
		this.source = source;
		this.type = type;
		this.destination = destination;
		this.data = data;
	}

	public int getSource() {
		return source;
	}

	public void setSource(int source) {
		this.source = source;
	}

	public int getDestination() {
		return destination;
	}

	public void setDestination(int destination) {
		this.destination = destination;
	}

	public int getType() {
		return type;
	}

	public void setType(int type) {
		this.type = type;
	}

	public String getData() {
		return data;
	}

	public void setData(String data) {
		this.data = data;
	}
	
	@Override
	public String toString() {
		return "ClientSocket [source=" + source + ", destination=" + destination + ", type=" + type + ", data=" + data
				+ "]";
	}

	public static String toJson(ClientSocket clientSocket) throws JsonProcessingException{
		return mapper.writeValueAsString(clientSocket);
	}
	
	public static ClientSocket toSocketData(String json) throws JsonParseException, JsonMappingException, IOException{
		return mapper.readValue(json,ClientSocket.class);
	}
}
